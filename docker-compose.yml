services:
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app_network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-iambabaprince@gmail.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-babaprince}
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - app_network
    depends_on:
      - postgres


    # Service pour le stockage d'objets MinIO
  minio:
    image: quay.io/minio/minio
    container_name: mon-minio
    environment:
      # Définit les identifiants pour MinIO
      MINIO_ROOT_USER: galaxysolutions
      MINIO_ROOT_PASSWORD: g@l@xy$0luti0n$
    ports:
      # Rend l'API MinIO accessible sur le port 9000
      - "9000:9000"
      # Rend la console web MinIO accessible sur le port 9001
      - "9001:9001"
    volumes:
      # Rend les fichiers stockés dans MinIO persistants
      - minio-data:/data
    command: server /data --console-address ":9001"
    networks:
      - app_network


#  tms-discovery-service:
#    build: ./discovery-service
#    container_name: tms-discovery-service
#    ports:
#      - '8761:8761'
#    expose:
#      - '8761'
#    healthcheck:
#      test: [ "CMD", "curl", "-f", "http://localhost:8761/actuator/health" ]
#      interval: 10s
#      retries: 4
#    networks:
#      - app_network
#
#  tms-config-service:
#    build: ./config-service
#    container_name: tms-config-service
#    ports:
#      - '9999:9999'
#    expose:
#      - '9999'
#    environment:
#      - DISCOVERY_SERVICE_URL=${DISCOVERY_SERVICE_URL}
#      - SPRING_CLOUD_CONFIG_SERVER_GIT_URI=${CONFIG_SERVER_GIT_URI}
#      - SPRING_CLOUD_CONFIG_SERVER_GIT_CLONE_ON_START=true
#      - SPRING_CLOUD_CONFIG_SERVER_GIT_FORCE_PULL=true
#      - SPRING_CLOUD_CONFIG_SERVER_GIT_DEFAULT_LABEL=draft
#    healthcheck:
#      test: [ "CMD", "curl", "-f", "http://localhost:9999/actuator/health" ]
#      interval: 20s
#      retries: 10
#    depends_on:
#      tms-discovery-service:
#        condition: service_healthy
#    networks:
#      - app_network
#
#  tms-gateway-service:
#    build: ./gateway-service
#    container_name: tms-gateway-service
#    ports:
#      - '8888:8888'
#    expose:
#      - '8888'
#    environment:
#      - DISCOVERY_SERVICE_URL=${DISCOVERY_SERVICE_URL}
#      - spring_cloud_config_enabled=true
#      - spring_config_import=optional:configserver:http://tms-config-service:9999
#      - app_secret_key=${JWT_SECRET_KEY_GATEWAY}
#      - app_expiration-time=${JWT_EXPIRATION_TIME_GATEWAY}
#    healthcheck:
#      test: [ "CMD", "curl", "-f", "http://localhost:8888/actuator/health" ]
#      interval: 10s
#      retries: 15
#    depends_on:
#      tms-config-service:
#        condition: service_healthy
#    networks:
#      - app_network

#
#  tms-auth-service:
#    build: ./auth-service
#    container_name: tms-auth-service
#    ports:
#      - '8001:8001'
#    expose:
#      - '8001'
#    environment:
#      - DISCOVERY_SERVICE_URL=${DISCOVERY_SERVICE_URL}
#      - spring_cloud_config_enabled=true
#      - spring_config_import=optional:configserver:http://tms-config-service:9999
#      - spring_datasource_url=jdbc:postgresql://${AUTH_DB_HOST}:${AUTH_DB_PORT}/${AUTH_DB_NAME}
#    healthcheck:
#      test: [ "CMD", "curl", "-f", "http://localhost:8001/actuator/health" ]
#      interval: 10s
#      retries: 15
#    depends_on:
#      tms-gateway-service:
#        condition: service_healthy
#    networks:
#      - app_network
#
#
#  tms-company-service:
#    build: ./company-service
#    container_name: tms-company-service
#    ports:
#      - '8002:8002'
#    expose:
#      - '8002'
#    environment:
#      - DISCOVERY_SERVICE_URL=${DISCOVERY_SERVICE_URL}
#      - spring_cloud_config_enabled=true
#      - spring_config_import=optional:configserver:http://tms-config-service:9999
#      - spring_datasource_url=jdbc:postgresql://${COMPANY_DB_HOST}:${COMPANY_DB_PORT}/${COMPANY_DB_NAME}
#    healthcheck:
#      test: [ "CMD", "curl", "-f", "http://localhost:8002/actuator/health" ]
#      interval: 10s
#      retries: 15
#    depends_on:
#      tms-auth-service:
#        condition: service_healthy
#    networks:
#      - app_network
#
#  tms-training-service:
#    build: ./training-service
#    container_name: tms-training-service
#    ports:
#      - '8003:8003'
#    expose:
#      - '8003'
#    environment:
#      - DISCOVERY_SERVICE_URL=${DISCOVERY_SERVICE_URL}
#      - spring_cloud_config_enabled=true
#      - spring_config_import=optional:configserver:http://tms-config-service:9999
#      - spring_datasource_url=jdbc:postgresql://${TRAINING_DB_HOST}:${TRAINING_DB_PORT}/${TRAINING_DB_NAME}
#    healthcheck:
#      test: [ "CMD", "curl", "-f", "http://localhost:8003/actuator/health" ]
#      interval: 10s
#      retries: 15
#    depends_on:
#      tms-company-service:
#        condition: service_healthy
#    networks:
#      - app_network
#
#
#  tms-notification-service:
#    build: ./notification-service
#    container_name: tms-notification-service
#    ports:
#      - '8010:8010'
#    expose:
#      - '8010'
#    environment:
#      - DISCOVERY_SERVICE_URL=${DISCOVERY_SERVICE_URL}
#      - spring_cloud_config_enabled=true
#      - spring_config_import=optional:configserver:http://tms-config-service:9999
#      - spring_datasource_url=jdbc:postgresql://${NOTIFICATION_DB_HOST}:${NOTIFICATION_DB_PORT}/${NOTIFICATION_DB_NAME}
#    healthcheck:
#      test: [ "CMD", "curl", "-f", "http://localhost:8010/actuator/health" ]
#      interval: 10s
#      retries: 15
#    depends_on:
#      tms-training-service:
#        condition: service_healthy
#    networks:
#      - app_network


#  tms-frontend:
#    build: ./frontend
#    container_name: tms-frontend
#    restart: always
#    depends_on:
#      tms-notification-service:
#        condition: service_healthy
#    environment:
#      - NEXT_PUBLIC_API_URL=http://localhost:8888
#    ports:
#      - "3000:3000"
#    networks:
#      - app_network

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
  minio-data:
    driver: local

networks:
  app_network:
    name: app_network
    driver: bridge